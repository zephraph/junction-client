searchState.loadedDescShard("junction_core", 0, "An XDS-compatible HTTP Client.\nA Backend and the LoadBalancer it’s configured with.\nA service discovery client that looks up URL information …\nHow to resolve routes and endpoints.\nA DNS name and port. The name should be resolved …\nUpdate configuration dynamically as part of making this …\nAn HTTP endpoint to make a request to.\nThe address of an endpoint.\nContains the error value\nAn error when using the Junction client.\nA view into an HTTP Request, before any rewrites or …\nContains the success value\nThe result of resolving a route.\nAn opaque string used to version an xDS resource.\nA <code>Result</code> alias where the <code>Err</code> case is <code>junction_core::Error</code>.\nA resolved IP address and port. This address can be used …\nResolve configuration with only existing routes and …\nAn http::Uri that has an <code>http</code> or <code>https</code> scheme and a …\nA single xDS configuration object, with additional …\nThe backend selected as part of route resolution.\nBuild a new client, spawning a new ADS client in the …\nCheck route resolution.\nStart a gRPC CSDS server on the given port.\nDump the Client’s current table of BackendLbs, merging …\nDump the Client’s current table of Routes, merging …\nDump the client’s current cache of xDS resources, as …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe request headers, before\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if this is a temporary error.\nThe HTTP Method of the request.\nResolve an HTTP method, URL, and headers into a set of …\nResolve an HTTP method, URL, and headers to a target …\nThe resolved route.\nThe index of the rule that matched the request. This will …\nThe request URL, before any rewrites or modifications have …\nSet default <code>routes</code> and <code>backends</code> for this client.")